{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\seeunLee\\\\Desktop\\\\\\uC138\\uC740\\\\\\uAC1C\\uBC1C \\uACF5\\uBD80\\\\\\uD504\\uB85C\\uC81D\\uD2B8\\\\guest-book\\\\Happy-Desk\\\\src\\\\main\\\\Happy-Desk-Front\\\\src\\\\components\\\\PasswordModal.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\n\n// 사용자가 로그인한 상태인지 여부를 확인하는 함수\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isLoggedIn = () => {\n  const accessToken = localStorage.getItem('access_token');\n  return !!accessToken; // access_token이 존재하면 true, 없으면 false 반환\n};\n\n// 컴포넌트\nfunction PasswordModal({\n  isOpen,\n  onClose,\n  onConfirm\n}) {\n  _s();\n  const [password, setPassword] = React.useState(\"\");\n  const handleConfirm = () => {\n    onConfirm(password);\n    onClose();\n  };\n  if (isLoggedIn()) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"password-modal-overlay\",\n      onClick: onClose,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"password-modal\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"\\uC815\\uB9D0 \\uC0AD\\uC81C\\uD558\\uC2DC\\uACA0\\uC2B5\\uB2C8\\uAE4C?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleConfirm,\n            children: \"\\uD655\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onClose,\n            children: \"\\uCDE8\\uC18C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"password-modal-overlay\",\n      onClick: onClose,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"password-modal\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"\\uAE00\\uC791\\uC131\\uC2DC \\uC785\\uB825\\uD588\\uB358 \\uBE44\\uBC88\\uB97C \\uC801\\uC5B4\\uC8FC\\uC138\\uC694.\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleConfirm,\n            children: \"\\uD655\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onClose,\n            children: \"\\uCDE8\\uC18C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n}\n_s(PasswordModal, \"fsE4KjUtTGid/UZc9Uo/kD8+5F8=\");\n_c = PasswordModal;\nexport default PasswordModal;\nvar _c;\n$RefreshReg$(_c, \"PasswordModal\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","isLoggedIn","accessToken","localStorage","getItem","PasswordModal","isOpen","onClose","onConfirm","_s","password","setPassword","useState","handleConfirm","className","onClick","children","e","stopPropagation","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/seeunLee/Desktop/세은/개발 공부/프로젝트/guest-book/Happy-Desk/src/main/Happy-Desk-Front/src/components/PasswordModal.js"],"sourcesContent":["import React from 'react';\r\n\r\n// 사용자가 로그인한 상태인지 여부를 확인하는 함수\r\nconst isLoggedIn = () => {\r\n  const accessToken = localStorage.getItem('access_token');\r\n  return !!accessToken; // access_token이 존재하면 true, 없으면 false 반환\r\n};\r\n\r\n// 컴포넌트\r\nfunction PasswordModal({ isOpen, onClose, onConfirm }) {\r\n  const [password, setPassword] = React.useState(\"\");\r\n\r\n  const handleConfirm = () => {\r\n    onConfirm(password);\r\n    onClose();\r\n  };\r\n\r\n  if (isLoggedIn()) {\r\n    return (\r\n      <div className=\"password-modal-overlay\" onClick={onClose}>\r\n        <div className=\"password-modal\" onClick={(e) => e.stopPropagation()}>\r\n          <div>정말 삭제하시겠습니까?</div>\r\n          <div className=\"buttons-container\">\r\n            <button onClick={handleConfirm}>확인</button>\r\n            <button onClick={onClose}>취소</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"password-modal-overlay\" onClick={onClose}>\r\n        <div className=\"password-modal\" onClick={(e) => e.stopPropagation()}>\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"글작성시 입력했던 비번를 적어주세요.\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <div className=\"buttons-container\">\r\n            <button onClick={handleConfirm}>확인</button>\r\n            <button onClick={onClose}>취소</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PasswordModal;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,UAAU,GAAGA,CAAA,KAAM;EACvB,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;EACxD,OAAO,CAAC,CAACF,WAAW,CAAC,CAAC;AACxB,CAAC;;AAED;AACA,SAASG,aAAaA,CAAC;EAAEC,MAAM;EAAEC,OAAO;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EACrD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,KAAK,CAACc,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1BL,SAAS,CAACE,QAAQ,CAAC;IACnBH,OAAO,CAAC,CAAC;EACX,CAAC;EAED,IAAIN,UAAU,CAAC,CAAC,EAAE;IAChB,oBACED,OAAA;MAAKc,SAAS,EAAC,wBAAwB;MAACC,OAAO,EAAER,OAAQ;MAAAS,QAAA,eACvDhB,OAAA;QAAKc,SAAS,EAAC,gBAAgB;QAACC,OAAO,EAAGE,CAAC,IAAKA,CAAC,CAACC,eAAe,CAAC,CAAE;QAAAF,QAAA,gBAClEhB,OAAA;UAAAgB,QAAA,EAAK;QAAY;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACvBtB,OAAA;UAAKc,SAAS,EAAC,mBAAmB;UAAAE,QAAA,gBAChChB,OAAA;YAAQe,OAAO,EAAEF,aAAc;YAAAG,QAAA,EAAC;UAAE;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC3CtB,OAAA;YAAQe,OAAO,EAAER,OAAQ;YAAAS,QAAA,EAAC;UAAE;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV,CAAC,MAAM;IACL,oBACEtB,OAAA;MAAKc,SAAS,EAAC,wBAAwB;MAACC,OAAO,EAAER,OAAQ;MAAAS,QAAA,eACvDhB,OAAA;QAAKc,SAAS,EAAC,gBAAgB;QAACC,OAAO,EAAGE,CAAC,IAAKA,CAAC,CAACC,eAAe,CAAC,CAAE;QAAAF,QAAA,gBAClEhB,OAAA;UACEuB,IAAI,EAAC,UAAU;UACfC,WAAW,EAAC,sGAAsB;UAClCC,KAAK,EAAEf,QAAS;UAChBgB,QAAQ,EAAGT,CAAC,IAAKN,WAAW,CAACM,CAAC,CAACU,MAAM,CAACF,KAAK;QAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9C,CAAC,eACFtB,OAAA;UAAKc,SAAS,EAAC,mBAAmB;UAAAE,QAAA,gBAChChB,OAAA;YAAQe,OAAO,EAAEF,aAAc;YAAAG,QAAA,EAAC;UAAE;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC3CtB,OAAA;YAAQe,OAAO,EAAER,OAAQ;YAAAS,QAAA,EAAC;UAAE;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;AACF;AAACb,EAAA,CAtCQJ,aAAa;AAAAuB,EAAA,GAAbvB,aAAa;AAwCtB,eAAeA,aAAa;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}