{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\seeunLee\\\\Desktop\\\\\\uC138\\uC740\\\\\\uAC1C\\uBC1C \\uACF5\\uBD80\\\\\\uD504\\uB85C\\uC81D\\uD2B8\\\\guest-book\\\\Happy-Desk\\\\src\\\\main\\\\Happy-Desk-Front\\\\src\\\\components\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n\n  // 쿠키를 가져오는 함수\n  function getCookie(key) {\n    var result = null;\n    var cookie = document.cookie.split(';');\n    cookie.some(function (item) {\n      item = item.replace(' ', '');\n      var dic = item.split('=');\n      if (key === dic[0]) {\n        result = dic[1];\n        return true;\n      }\n    });\n    return result;\n  }\n\n  // HTTP 요청을 보내는 함수\n  const httpRequest = async (method, url, body, success, fail) => {\n    try {\n      const response = await fetch(url, {\n        method: method,\n        headers: {\n          'Authorization': 'Bearer ' + localStorage.getItem('access_token'),\n          'Content-Type': 'application/json'\n        },\n        body: body\n      });\n\n      // access token이 유효한 경우\n      if (response.status === 200 || response.status === 201) {\n        var user = await response.json();\n        success(user);\n\n        // access token이 만료된 경우\n      } else if (response.status === 401 && getCookie('refresh_token')) {\n        const res = await fetch('/api/token', {\n          method: 'POST',\n          headers: {\n            Authorization: 'Bearer ' + localStorage.getItem('access_token'),\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            refreshToken: getCookie('refresh_token')\n          })\n        });\n        if (res.ok) {\n          const result = await res.json();\n          localStorage.setItem('access_token', result.accessToken);\n          await httpRequest(method, url, body, success, fail);\n        } else {\n          fail();\n        }\n\n        // 로그인 되지 않은 경우\n      } else {\n        fail();\n      }\n\n      // 오류가 발생한 경우\n    } catch (error) {\n      fail();\n    }\n  };\n\n  // 사용자 정보를 가져오는 함수\n  const getUserInfo = async () => {\n    var body = JSON.stringify({});\n    let userInfo = null;\n    function success(user) {\n      userInfo = user;\n    }\n    ;\n    function fail() {\n      userInfo = null;\n    }\n    ;\n    await httpRequest('POST', '/api/authenticated/userInfo', body, success, fail);\n    if (userInfo != null) {\n      console.log(\"user name: \" + userInfo.name);\n    } else {\n      console.log(\"비로그인한 회원입니다.\");\n    }\n    return userInfo;\n  };\n\n  // async function getUserInfo() {\n  //   var body = JSON.stringify({});\n  //   let userInfo = null;\n\n  //   function success(user) {\n  //     userInfo = user;\n  //   };\n\n  //   function fail() {\n  //     userInfo = null;\n  //   };\n\n  //   await httpRequest('POST', '/api/authenticated/userInfo', body, success, fail);\n\n  //   if (userInfo != null) {\n  //     console.log(\"user name: \" + userInfo.name);\n  //   } else {\n  //     console.log(\"비로그인한 회원입니다.\")\n  //   }\n\n  //   return userInfo;\n  // }\n\n  useEffect(() => {}, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      getUserInfo\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","getCookie","key","result","cookie","document","split","some","item","replace","dic","httpRequest","method","url","body","success","fail","response","fetch","headers","localStorage","getItem","status","json","res","Authorization","JSON","stringify","refreshToken","ok","setItem","accessToken","error","getUserInfo","userInfo","console","log","name","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/seeunLee/Desktop/세은/개발 공부/프로젝트/guest-book/Happy-Desk/src/main/Happy-Desk-Front/src/components/AuthContext.js"],"sourcesContent":["import { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n\r\n  // 쿠키를 가져오는 함수\r\n  function getCookie(key) {\r\n    var result = null;\r\n    var cookie = document.cookie.split(';');\r\n    cookie.some(function (item) {\r\n      item = item.replace(' ', '');\r\n\r\n      var dic = item.split('=');\r\n\r\n      if (key === dic[0]) {\r\n        result = dic[1];\r\n        return true;\r\n      }\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  // HTTP 요청을 보내는 함수\r\n  const httpRequest = async (method, url, body, success, fail) => {\r\n    try {\r\n      const response = await fetch(url, {\r\n        method: method,\r\n        headers: {\r\n          'Authorization': 'Bearer ' + localStorage.getItem('access_token'),\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: body,\r\n      });\r\n\r\n      // access token이 유효한 경우\r\n      if (response.status === 200 || response.status === 201) {\r\n        var user = await response.json();\r\n        success(user);\r\n\r\n      // access token이 만료된 경우\r\n      } else if (response.status === 401 && getCookie('refresh_token')) {\r\n        const res = await fetch('/api/token', {\r\n          method: 'POST',\r\n          headers: {\r\n            Authorization: 'Bearer ' + localStorage.getItem('access_token'),\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n            refreshToken: getCookie('refresh_token'),\r\n          }),\r\n        });\r\n\r\n        if (res.ok) {\r\n          const result = await res.json();\r\n          localStorage.setItem('access_token', result.accessToken);\r\n          await httpRequest(method, url, body, success, fail);\r\n        } else {\r\n          fail();\r\n        }\r\n\r\n      // 로그인 되지 않은 경우\r\n      } else {\r\n        fail();\r\n      }\r\n    \r\n    // 오류가 발생한 경우\r\n    } catch (error) {\r\n      fail();\r\n    }\r\n  };\r\n\r\n  // 사용자 정보를 가져오는 함수\r\n  const getUserInfo = async () => {\r\n    var body = JSON.stringify({});\r\n    let userInfo = null;\r\n  \r\n    function success(user) {\r\n      userInfo = user;\r\n    };\r\n  \r\n    function fail() {\r\n      userInfo = null;\r\n    };\r\n  \r\n    await httpRequest('POST', '/api/authenticated/userInfo', body, success, fail);\r\n  \r\n    if (userInfo != null) {\r\n      console.log(\"user name: \" + userInfo.name);\r\n    } else {\r\n      console.log(\"비로그인한 회원입니다.\")\r\n    }\r\n    \r\n    return userInfo;\r\n  };\r\n\r\n  // async function getUserInfo() {\r\n  //   var body = JSON.stringify({});\r\n  //   let userInfo = null;\r\n  \r\n  //   function success(user) {\r\n  //     userInfo = user;\r\n  //   };\r\n  \r\n  //   function fail() {\r\n  //     userInfo = null;\r\n  //   };\r\n  \r\n  //   await httpRequest('POST', '/api/authenticated/userInfo', body, success, fail);\r\n  \r\n  //   if (userInfo != null) {\r\n  //     console.log(\"user name: \" + userInfo.name);\r\n  //   } else {\r\n  //     console.log(\"비로그인한 회원입니다.\")\r\n  //   }\r\n    \r\n  //   return userInfo;\r\n  // }\r\n  \r\n\r\n  useEffect(() => {\r\n  }, []);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, getUserInfo }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  return useContext(AuthContext);\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}